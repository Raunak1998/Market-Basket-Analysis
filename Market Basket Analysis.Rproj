library(tidyverse)
library(data.table)
system("ls ./input")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)
  
  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)
  
  numPlots = length(plots)
  
  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                     ncol = cols, nrow = ceiling(numPlots/cols))
  }
  
  if (numPlots==1) {
    print(plots[[1]])
    
  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
    
    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
      
      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
list.files("./input")
train <- read_csv("./input/train.csv")
set.seed(1234) 
train <- sample_frac(as.tibble(fread('./input/train.csv')),0.2)
stores <- read_csv("./input/stores.csv")
items <- read_csv("./input/items.csv")
transactions <- read_csv("./input/transactions.csv")
oil <- read_csv("./input/oil.csv")
holidays_events <- read_csv("./input/holidays_events.csv")
summary(train)
glimpse(train)
summary(stores)
summary(items)
summary(transactions)
summary(oil)
summary(holidays_events)
train$date <- as.Date(train$date)
head(train)
head(stores)
head(items)
head(transactions)
head(oil)
head(holidays_events)
transactions %>%
  group_by(date) %>%
  summarise(sum_trans = sum(transactions)) %>%
  ggplot(aes(date, sum_trans)) +
  geom_line(color = "black") +
  geom_smooth(method = "loess", color = "red", span = 1/5) +
  ylab("Total Transactions") +
  ggtitle("Plot of total transactions over training dataset time frame")
transactions %>%
  ggplot(aes(date, transactions, color = factor(store_nbr))) +
  geom_smooth(method = "loess", span = 1/2, se = FALSE) +
  ggtitle("Plot of total sales per store over training dataset")

